# Module main()
#	Declare String command
#	display_greeting()
#	while command != "exit"
#		Set command = get_valid_input("command", True)
#		process_command(command)
# End Module

# Module initialize_commands()
#	Declare List<String> commands
#	Set commands = [
#		"add user",
#		"remove user",
#		"list users",
#		"add book",
#		"remove book",
#		"list books",
#		"checkout",
#		"checkin",
#		"help",
#		"?",
#		"exit"
#		]
#	set_data(command, commands)
# End Module 

# Module initialize_commands()
#	Declare List<String> commands
#	Set commands = [
#		"add user",
#		"remove user",
#		"list users",
#		"add book",
#		"remove book",
#		"list books",
#		"checkout",
#		"checkin",
#		"help",
#		"?",
#		"exit"
#		]
#	set_data(command, commands)
# End Module 

# Module initialize_commands()
#	Declare List<String> commands
#	Set commands = [
#		"add user",
#		"remove user",
#		"list users",
#		"add book",
#		"remove book",
#		"list books",
#		"checkout",
#		"checkin",
#		"help",
#		"?",
#		"exit"
#		]
#	set_data(command, commands)
# End Module 

# Module display_list(List<string> list)
#	For each item in list
#		Display item
# End Module

# Module set_data_add(String type, String value)
#	Declare List<String> data
#	If validate_input(type, value) == False
#		Set data = get_data(type)
#		Set data += value
#		set_data(type, data)
# End Module 

# Module set_data_remove(String type, String value)
#	Declare List<String> data
#	If validate_input(type, value) == True
#		Set data = get_data(type)
#		Set data -= value
#		set_data(type, data)
# End Module 

# Module set_data_move(String type_from, String type_to, value)
#	set_data_remove(type_from, value)
#	set_data_add(type_to, value)
# End Module

# Module set_data(String type, List<String> value)
#	Set type += "s.json"
#	With open(type, "w") as file
#		json.dump(value, file)
# End Module

# Module print_error_invalid()
#	Display "Invalid entry. Enter a valid selection or cancel to exit."
# End Module

# Module request_input(String type)
#	Display "Please enter a " + type
# End Module  

# Function String get_valid_input(String type, Bool exists)
#	Declare String user_input
#	Set user_input = get_input(type)
#	While validate_input(type, user_input) == exists
#		Display "Invalid entry. Enter a valid selection or cancel to exit."
#		Set user_input = get_input(type)
#		If user_input == "cancel"
#			Break
#	Return user_input
# End Function

# Function String get_input(String type)
#	Declare String user_input
#	request_input(type)
#	Input user_input
#	return user_input
# End Function 

# Function Bool validate_input(String type, String entry)
#	Declare List<String> data
#	Set data = get_data(type)
#	If data contains entry
#		Return True
#	Else
#		Return False
# End Function 

# Function List<String> get_data(String type)
#	Declare List<String> data
#	Set type += "s.json"
#	With open(type) as file
#		If file exists
#			Set data = json.load(file)
#		Except data = data 
#	Return data
# End Function  